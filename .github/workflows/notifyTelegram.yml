name: 'Notify Telegram'

on: 
 workflow_call:
    inputs:
      event_name:
        required: true
        description: 'Name of the GitHub event triggering the notification'
        type: string
      action:
        required: true
        description: 'Specific action that triggered the event'
        type: string
      pr_number:
        required: false
        description: 'Number of the pull request'
        type: string
      pr_title:
        required: false
        description: 'Title of the pull request'
        type: string
      pr_user:
        required: false
        description: 'Username of the user who created the pull request'
        type: string
      pr_url:
        required: false
        description: 'URL of the pull request'
        type: string
      merged:
        required: false
        description: 'Whether the pull request was merged (true/false)'
        type: boolean
      review_state:
        required: false
        description: 'State of the review (e.g., approved, changes requested)'
        type: string
      reviewer_logins:
        required: false
        description: 'Comma-separated list of logins for the reviewers of the pull request'
        type: string
      assignee_logins:
        required: false
        description: 'Comma-separated list of logins for the assignees of the pull request'
        type: string
      repo_name:
        required: true
        description: 'repo name'
        type: string
      review_user_login:
        required: false
        description: "review user login"
        type: string
jobs:
  notification_logic:
    runs-on: ubuntu-latest
    outputs:
      message: ${{ steps.set_message.outputs.message }}
    steps:
      - name: Set Notification Message
        id: set_message
        run: |
          API_URL="https://vm4719950.34ssd.had.wf/prNotifier/sendNotification"
          BEARER_TOKEN="SuperSecretToken12345#$%!@#"

          JSON_PAYLOAD=$(jq -n \
                  --arg event_name "${{ inputs.event_name }}" \
                  --arg action "${{ inputs.action }}" \
                  --arg pr_number "${{ inputs.pr_number }}" \
                  --arg pr_title "${{ inputs.pr_title }}" \
                  --arg pr_user "${{ inputs.pr_user }}" \
                  --arg pr_url "${{ inputs.pr_url }}" \
                  --arg merged "${{ inputs.merged }}" \
                  --arg review_state "${{ inputs.review_state }}" \
                  --arg reviewer_logins "${{ inputs.reviewer_logins }}" \
                  --arg assignee_logins "${{ inputs.assignee_logins }}" \
                  --arg repo_name "${{ inputs.repo_name }}" \
                  --arg review_user_login "${{ inputs.repo_name }}" \
                  '{event_name: $event_name, action: $action, pr_number: $pr_number, pr_title: $pr_title, pr_user: $pr_user, pr_url: $pr_url, merged: $merged, review_state: $review_state, reviewer_logins: $reviewer_logins, assignee_logins: $assignee_logins, repo_name: $repo_name, review_user_login: $review_user_login}')


          curl --insecure -X POST "$API_URL" \
               -H "Content-Type: application/json" \
               -H "Authorization: Bearer $BEARER_TOKEN" \
               -d "$JSON_PAYLOAD"

