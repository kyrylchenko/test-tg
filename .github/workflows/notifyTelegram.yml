name: 'Notify Telegram'

on: 
 workflow_call:
    inputs:
      event_name:
        required: true
        description: 'Name of the GitHub event triggering the notification'
        type: string
      action:
        required: true
        description: 'Specific action that triggered the event'
        type: string
      pr_number:
        required: false
        description: 'Number of the pull request'
        type: string
      pr_title:
        required: false
        description: 'Title of the pull request'
        type: string
      pr_user:
        required: false
        description: 'Username of the user who created the pull request'
        type: string
      pr_url:
        required: false
        description: 'URL of the pull request'
        type: string
      merged:
        required: false
        description: 'Whether the pull request was merged (true/false)'
        type: boolean
      review_state:
        required: false
        description: 'State of the review (e.g., approved, changes requested)'
        type: string
      reviewer_logins:
        required: false
        description: 'Comma-separated list of logins for the reviewers of the pull request'
        type: string
      assignee_logins:
        required: false
        description: 'Comma-separated list of logins for the assignees of the pull request'
        type: string
jobs:
  notification_logic:
    runs-on: ubuntu-latest
    outputs:
      message: ${{ steps.set_message.outputs.message }}
    steps:
      - name: Set Notification Message
        id: set_message
        run: |
          MESSAGE=""
          if [ "${{ inputs.event_name }}" == "pull_request" ] && [ "${{ inputs.action }}" == "opened" ]; then
           MESSAGE+="🆕 *#PR${{ inputs.pr_number }}%0AOpened* by ${{ inputs.pr_user }} - _${{ inputs.pr_title }}_.%0ACheck it: [Here](${{ inputs.pr_url }})"
          elif [ "${{ inputs.event_name }}" == "pull_request_review" ] && [ "${{ inputs.review_state }}" == "changes_requested" ]; then
           MESSAGE+="⚠️ *#PR${{ inputs.pr_number }}%0AChanges requested* by ${{ inputs.reviewer_logins }}.%0AReview: [Here](${{ inputs.pr_url }})"
          elif [ "${{ inputs.event_name }}" == "pull_request" ] && [ "${{ inputs.action }}" == "synchronize" ]; then
           MESSAGE+="🔄 *#PR${{ inputs.pr_number }}%0AUpdated* after changes requested.%0AReview the updates: [Here](${{ inputs.pr_url }})"
          elif [ "${{ inputs.event_name }}" == "pull_request_review" ] && [ "${{ inputs.review_state }}" == "approved" ]; then
           MESSAGE+="✅ *#PR${{ inputs.pr_number }}%0AApproved* by ${{ inputs.reviewer_logins }}.%0ACongratulations! 🎉"
          fi

          echo "MESSAGE=$MESSAGE" >> $GITHUB_ENV

          curl -X POST "https://api.telegram.org/bot6972170862:AAG4aN5Z8ApFusuToNIE8-zEe6PoJLOSl3U/sendMessage" \
               -H "Content-Type: application/x-www-form-urlencoded" \
               -d "chat_id=-1002018935905" \
               -d "text=$MESSAGE" \
               -d "parse_mode=Markdown" \
               -d "disable_web_page_preview=true"
