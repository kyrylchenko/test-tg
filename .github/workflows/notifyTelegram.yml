name: 'Notify Telegram'

on: 
 workflow_call:
    inputs:
      event_name:
        required: true
        description: 'Name of the GitHub event triggering the notification'
        type: string
      action:
        required: true
        description: 'Specific action that triggered the event'
        type: string
      pr_number:
        required: false
        description: 'Number of the pull request'
        type: string
      pr_title:
        required: false
        description: 'Title of the pull request'
        type: string
      pr_user:
        required: false
        description: 'Username of the user who created the pull request'
        type: string
      pr_url:
        required: false
        description: 'URL of the pull request'
        type: string
      merged:
        required: false
        description: 'Whether the pull request was merged (true/false)'
        type: boolean
      review_state:
        required: false
        description: 'State of the review (e.g., approved, changes requested)'
        type: string
      reviewer_logins:
        required: false
        description: 'Comma-separated list of logins for the reviewers of the pull request'
        type: string
      assignee_logins:
        required: false
        description: 'Comma-separated list of logins for the assignees of the pull request'
        type: string
      repo_name:
        required: true
        description: 'repo name'
        type: string
      review_user_login:
        required: false
        description: "review user login"
        type: string
jobs:
  notification_logic:
    runs-on: ubuntu-latest
    outputs:
      message: ${{ steps.set_message.outputs.message }}
    steps:
      - name: Set Notification Message
        id: set_message
        run: |
          MESSAGE=""
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2 | tr '-' '_')
          if [ "${{ inputs.event_name }}" == "pull_request" ] && [ "${{ inputs.action }}" == "opened" ]; then
           MESSAGE+="<b>üÜï #PR${{ inputs.pr_number }}_$REPO_NAME</b>%0A<i>${{ inputs.pr_title }}</i>%0A<b>Reviewers:</b> ${{ inputs.reviewer_logins }}%0A<b>Assignee:</b> ${{ inputs.assignee_logins }}%0ACheck it: <b><a href='${{ inputs.pr_url }}'>Here</a></b>"
          elif [ "${{ inputs.event_name }}" == "pull_request_review" ] && [ "${{ inputs.review_state }}" == "changes_requested" ]; then
           MESSAGE+="<b>‚ö†Ô∏è #PR${{ inputs.pr_number }}_$REPO_NAME</b>%0A<b>Changes requested%0AReviewer:${{ inputs.reviewer_logins }}</b>.%0AReview: <a href='${{ inputs.pr_url }}'>Here</a>"
          elif [ "${{ inputs.event_name }}" == "pull_request" ] && [ "${{ inputs.action }}" == "review_requested" ]; then
           MESSAGE+="<b>üîÑ #PR${{ inputs.pr_number }}_$REPO_NAME</b>%0AUpdated after changes requested.%0AReview the updates: <a href='${{ inputs.pr_url }}'>Here</a>"
          elif [ "${{ inputs.event_name }}" == "pull_request_review" ] && [ "${{ inputs.review_state }}" == "approved" ]; then
           MESSAGE+="<b>‚úÖ #PR${{ inputs.pr_number }}_$REPO_NAME</b>%0AApproved by <b>${{ inputs.reviewer_logins }}</b>.%0ACongratulations! üéâ"
          fi

          echo "MESSAGE=$MESSAGE" >> $GITHUB_ENV

          curl -X POST "https://api.telegram.org/bot6972170862:AAG4aN5Z8ApFusuToNIE8-zEe6PoJLOSl3U/sendMessage" \
               -H "Content-Type: application/x-www-form-urlencoded" \
               -d "chat_id=-1002018935905" \
               -d "text=$MESSAGE" \
               -d "parse_mode=HTML" \
               -d "disable_web_page_preview=true"
